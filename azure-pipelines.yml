trigger:
- main  # Pipeline triggers on a push to the main branch

variables:
  pythonVersion: '3.11'
  azureWebAppName: 'my-flask-api-123'  # <- Confirm your App Service name is correct!
  azureWebAppPackage: 'webapp.zip'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    # Step 1: Install Python
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'

    # Step 2: Install dependencies
    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    # Step 3: Install production server
    - script: pip install gunicorn
      displayName: 'Install Gunicorn'

    # Step 4: Zip the application code
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(azureWebAppPackage)'
        replaceExistingArchive: true

    # Step 5: Publish the artifact
    - publish: '$(Build.ArtifactStagingDirectory)/$(azureWebAppPackage)'
      artifact: 'flaskapp'

- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: DeployJob
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          # Step 6: Download the build artifact
          - download: current
            artifact: 'flaskapp'

          # Step 7: Deploy to Azure App Service
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Azure for Students' # <- LIKELY PLACEHOLDER! READ STEP 2 BELOW.
              appType: 'webAppLinux'
              appName: '$(azureWebAppName)'
              package: '$(Pipeline.Workspace)/flaskapp/$(azureWebAppPackage)'
              runtimeStack: 'PYTHON|3.11'
              startUpCommand: 'startup.command'